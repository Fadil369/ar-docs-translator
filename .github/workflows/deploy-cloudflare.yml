name: Deploy to Cloudflare

on:
  push:
    branches: [ main ]

jobs:
  missing-secrets:
    name: Check required secrets
    runs-on: ubuntu-latest
    steps:
      - name: Summarize required secrets
        run: |
          MISSING=()
          [ -z "${{ secrets.CF_API_TOKEN }}" ] && MISSING+=(CF_API_TOKEN)
          [ -z "${{ secrets.CF_ACCOUNT_ID }}" ] && MISSING+=(CF_ACCOUNT_ID)
          [ -z "${{ secrets.CF_WORKER_URL }}" ] && MISSING+=(CF_WORKER_URL)
          [ -z "${{ secrets.CF_API_ORIGIN }}" ] && MISSING+=(CF_API_ORIGIN)
          if [ ${#MISSING[@]} -gt 0 ]; then
            echo "Missing repo secrets: ${MISSING[*]}"
            echo "Set them with: gh secret set <NAME> -R $GITHUB_REPOSITORY"
          else
            echo "All required secrets are present."
          fi

  pages:
    name: Deploy Pages UI
    runs-on: ubuntu-latest
    needs: missing-secrets
    if: ${{ secrets.CF_WORKER_URL != '' && secrets.CF_API_TOKEN != '' && secrets.CF_ACCOUNT_ID != '' }}
    steps:
      - uses: actions/checkout@v4
      - name: Inject Worker URL into Pages
        run: |
          sed -i.bak "s|window.API_BASE = ''|window.API_BASE = '${{ secrets.CF_WORKER_URL }}'|" pages/index.html
      - name: Publish to Cloudflare Pages
        uses: cloudflare/pages-action@v1
        with:
          apiToken: ${{ secrets.CF_API_TOKEN }}
          accountId: ${{ secrets.CF_ACCOUNT_ID }}
          projectName: docs-ai-translator-ui
          directory: pages
          gitHubToken: ${{ secrets.GITHUB_TOKEN }}

  worker:
    name: Deploy Worker API proxy
    runs-on: ubuntu-latest
    needs: missing-secrets
    if: ${{ secrets.CF_API_TOKEN != '' && secrets.CF_ACCOUNT_ID != '' && secrets.CF_API_ORIGIN != '' }}
    defaults:
      run:
        working-directory: cloudflare/worker
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-node@v4
        with:
          node-version: '20'
      - run: npm install
      - name: Deploy Worker with Wrangler
        run: npx wrangler deploy --var API_ORIGIN="${API_ORIGIN}"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CF_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CF_ACCOUNT_ID }}
          API_ORIGIN: ${{ secrets.CF_API_ORIGIN }}
